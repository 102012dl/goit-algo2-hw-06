HW T 6 

Домашнє завдання до теми “Основи паралельних обчислень і модель MapReduce“ 

  import requests
from concurrent.futures import ThreadPoolExecutor
from collections import defaultdict
import matplotlib.pyplot as plt
import string


def get_text(url):
    try:
        response = requests.get(url)
        response.raise_for_status()
        return response.text
    except requests.RequestException as e:
        print(f"Error fetching text: {e}")
        return None


# Функція видалення пунктуації
def remove_punctuation(text):
    translator = str.maketrans('', '', string.punctuation)
    return text.translate(translator)


# Функція Map
def map_function(word):
    return word, 1


# Функція Shuffle
def shuffle_function(mapped_values):
    shuffled = defaultdict(list)
    for key, value in mapped_values:
        shuffled[key.lower()].append(value)
    return shuffled.items()


# Функція Reduce
def reduce_function(key_values):
    key, values = key_values
    return key, sum(values)


# Функція MapReduce
def map_reduce(text):
    text = remove_punctuation(text)
    words = text.split()

    # Паралельний Map
    with ThreadPoolExecutor() as executor:
        mapped_values = list(executor.map(map_function, words))

    # Shuffle
    shuffled_values = shuffle_function(mapped_values)

    # Паралельний Reduce
    with ThreadPoolExecutor() as executor:
        reduced_values = list(executor.map(reduce_function, shuffled_values))

    return dict(reduced_values)


# Візуалізація топ-10 слів
def visualize_top_words(word_counts, top_n=10):
    sorted_words = sorted(word_counts.items(), key=lambda item: item[1], reverse=True)[:top_n]
    words, counts = zip(*sorted_words)

    plt.figure(figsize=(10, 6))
    plt.bar(words, counts, color='skyblue')
    plt.xlabel('Слова')
    plt.ylabel('Частота використання')
    plt.title(f'Топ-{top_n} найчастіше вживаних слів')
    plt.xticks(rotation=45)
    plt.grid(axis='y', linestyle='--')
    plt.tight_layout()
    plt.show()


if __name__ == '__main__':
    url = "https://gutenberg.net.au/ebooks01/0100021.txt"
    text = get_text(url)

    if text:
        word_counts = map_reduce(text)
        visualize_top_words(word_counts, top_n=10)
    else:
        print("Не вдалося отримати текст для аналізу.")
